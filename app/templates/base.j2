<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>WinGetty - {{ title }}</title>
    <link rel="shortcut icon" href="{{ url_for('static', filename='img/favicon.ico') }}">

    <link rel="stylesheet" href="{{ url_for('static', filename='css/expand.min.css')}}">
    <link rel="stylesheet" href="{{ url_for('static', filename='css/style.css')}}">

    <script defer src="{{ url_for('static', filename='js/collapse.min.js') }}"></script>
    <script defer src="{{ url_for('static', filename='js/alpine.min.js') }}"></script>
    <script src="{{ url_for('static', filename='js/htmx.js') }}"></script>
    <script src="{{ url_for('static', filename='js/jquery-3.7.0.min.js') }}"></script>

    <!-- This is to load fonts asap -->
    {% include 'fonts.j2' %}

    <!-- Flash messages -->
    {% with messages = get_flashed_messages(with_categories=true) %}
    {% if messages %}
    {% for category, message in messages %}
    <script>
        window.addEventListener('load', function () {
            window.dispatchEvent(new CustomEvent('notice', {
                detail: {
                    text: '{{ message }}',
                    type: '{{ category }}'
                }
            }))
        });
    </script>
    {% endfor %}
    {% endif %}
    {% endwith %}

    <script>
        // On page load or when changing themes, best to add inline in `head` to avoid FOUC
        if (localStorage.getItem('color-theme') === 'dark' || (!('color-theme' in localStorage) && window.matchMedia('(prefers-color-scheme: dark)').matches)) {
            document.documentElement.classList.add('dark');
        } else {
            document.documentElement.classList.remove('dark')
        }
    </script>


</head>

<body class="min-h-screen h-full font-poppins flex flex-col bg-slate-200 dark:bg-zinc-800">
    <nav x-data="{ menuVisible: window.innerWidth > 768 }" @click.away="if(window.innerWidth < 768) menuVisible = false"
        class="flex items-center justify-between flex-wrap sm:flex-row bg-white dark:bg-zinc-900 text-neutral-700 dark:text-neutral-100	 p-4 drop-shadow-md sticky top-0 ">
        <a href="{{ url_for('ui.index') }}">
            <div class="flex flex-row items-center flex-shrink-0 text-neutral-900 dark:text-neutral-200 mr-6">
                <img src="{{ url_for('static', filename='img/wingetty.png')}}" alt="Logo" class="h-10 mr-2">
                <span class="font-semibold text-2xl tracking-tight mb-0.5">WinGetty</span>
            </div>
        </a>
        <div class="block md:hidden">
            <button @click="menuVisible = !menuVisible"
                class="flex items-center px-3 py-2  hover:text-blue-600 transition-colors duration-300">
                <svg class="fill-current h-6 w-6 transition-transform duration-300"
                    x-bind:class="menuVisible ? '-rotate-90' : 'rotate-0'" viewBox="0 0 20 20"
                    xmlns="http://www.w3.org/2000/svg">
                    <title>Menu</title>
                    <path d="M0 3h20v2H0V3zm0 6h20v2H0V9zm0 6h20v2H0v-2z" />
                </svg>
            </button>
        </div>

        <div class="w-full block flex-grow md:flex md:flex-row justify-between items-center md:w-auto text-lg font-semibold"
            x-collapse x-show="menuVisible">
            {% if current_user.is_authenticated %}

            <div class="text-lg font-semibold">
                <a href="{{ url_for('ui.packages') }}"
                    class="block mt-2 md:inline-block md:mt-0  hover:text-blue-600 mr-4 transition-colors duration-500">
                    Packages
                </a>
                <a href="{{ url_for('ui.setup') }}"
                    class="block mt-2 md:inline-block md:mt-0  hover:text-blue-600 mr-4 transition-colors duration-500">
                    Setup
                </a>

            </div>
            <a href="{{ url_for('ui.users') }}"
                class="block mt-2 md:inline-block md:mt-0  hover:text-blue-600 mr-4 transition-colors duration-500 ml-auto">
                Users
            </a>



            <a href="{{ url_for('ui.settings') }}"
                class="block mt-2 md:inline-block md:mt-0  hover:text-blue-600 mr-4 transition-colors duration-500">
                Settings
            </a>

            <a href="{{ url_for('auth.logout') }}"
                class="block mt-2 md:inline-block md:mt-0  hover:text-blue-600 mr-4 transition-colors duration-500 ">

                <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none"
                    stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"
                    class="feather feather-log-out">
                    <path d="M9 21H5a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h4"></path>
                    <polyline points="16 17 21 12 16 7"></polyline>
                    <line x1="21" y1="12" x2="9" y2="12"></line>
                </svg>

            </a>
            {% endif %}
            {% if not current_user.is_authenticated %}
            <a href="{{ url_for('auth.login') }}"
                class="block mt-2 md:inline-block md:mt-0  hover:text-blue-600 mr-4 transition-colors duration-500 ml-auto">
                Log in
            </a>
            {% if config['ENABLE_REGISTRATION'] %}
            <a href="{{ url_for('auth.signup') }}"
                class="block mt-2 md:inline-block md:mt-0  hover:text-blue-600 mr-4 transition-colors duration-500 ">
                Sign up
            </a>
            {% endif %}
            {% endif %}
            <button id="theme-toggle" class="theme-toggle mt-2 sm:mt-0" type="button" title="Toggle theme"
                aria-label="Toggle theme">
                <svg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" width="1.2em" height="1.2em"
                    fill="currentColor" class="theme-toggle__expand" viewBox="0 0 32 32">
                    <clipPath id="theme-toggle__expand__cutout">
                        <path d="M0-11h25a1 1 0 0017 13v30H0Z" />
                    </clipPath>
                    <g clip-path="url(#theme-toggle__expand__cutout)">
                        <circle cx="16" cy="16" r="8.4" />
                        <path
                            d="M18.3 3.2c0 1.3-1 2.3-2.3 2.3s-2.3-1-2.3-2.3S14.7.9 16 .9s2.3 1 2.3 2.3zm-4.6 25.6c0-1.3 1-2.3 2.3-2.3s2.3 1 2.3 2.3-1 2.3-2.3 2.3-2.3-1-2.3-2.3zm15.1-10.5c-1.3 0-2.3-1-2.3-2.3s1-2.3 2.3-2.3 2.3 1 2.3 2.3-1 2.3-2.3 2.3zM3.2 13.7c1.3 0 2.3 1 2.3 2.3s-1 2.3-2.3 2.3S.9 17.3.9 16s1-2.3 2.3-2.3zm5.8-7C9 7.9 7.9 9 6.7 9S4.4 8 4.4 6.7s1-2.3 2.3-2.3S9 5.4 9 6.7zm16.3 21c-1.3 0-2.3-1-2.3-2.3s1-2.3 2.3-2.3 2.3 1 2.3 2.3-1 2.3-2.3 2.3zm2.4-21c0 1.3-1 2.3-2.3 2.3S23 7.9 23 6.7s1-2.3 2.3-2.3 2.4 1 2.4 2.3zM6.7 23C8 23 9 24 9 25.3s-1 2.3-2.3 2.3-2.3-1-2.3-2.3 1-2.3 2.3-2.3z" />
                    </g>
                </svg>
            </button>
        </div>

    </nav>

    <main class="h-full w-full p-4 flex flex-col max-w-screen-xl mx-auto" x-data="{{ alpine_data }}">
        {% if current_user.is_authenticated and not error %}
        <div class="text-lg text-white pb-4  {{ 'hidden' if not config['ENABLE_REGISTRATION'] }}">
            <p class="p-2 bg-red-500/90 rounded-md">Registration is enabled, this is a potential security risk. Consider
                disabling it after you've created your users.</p>
        </div>
        {% endif %}
        {% block content %}{% endblock %}


    </main>

    <div x-data="noticesHandler()" class="fixed inset-0 flex flex-col items-end justify-start h-screen w-screen"
        @notice.window="add($event.detail)" style="pointer-events:none">
        <template x-for="notice of notices" :key="notice.id">
            <div x-show="visible.includes(notice)" x-transition:enter="transition ease-in duration-200"
                x-transition:enter-start="transform opacity-0 -translate-y-2"
                x-transition:enter-end="transform opacity-100" x-transition:leave="transition ease-out duration-500"
                x-transition:leave-start="transform translate-x-0 opacity-100"
                x-transition:leave-end="transform -translate-y-2 sm:translate-y-0 sm:translate-x-full opacity-0"
                @click="remove(notice.id)"
                class="rounded-lg mt-2 sm:m-4 w-auto mx-auto sm:w-auto p-8  h-16 flex items-center border-2 justify-center text-black dark:text-gray-200 bg-gray-100 dark:bg-zinc-800 shadow-lg font-bold text-lg cursor-pointer  z-50 "
                :class="{
				'border-green-500': notice.type === 'success',
				'border-blue-500': notice.type === 'info',
				'border-orange-500': notice.type === 'warning',
				'border-red-500': notice.type === 'error',
			 }" style="pointer-events:all" x-text="notice.text">
            </div>
        </template>
    </div>
    <script>
        function noticesHandler() {
            return {
                notices: [],
                visible: [],
                add(notice) {
                    notice.id = Date.now()
                    this.notices.push(notice)
                    this.fire(notice.id)
                },
                fire(id) {
                    this.visible.push(this.notices.find(notice => notice.id == id))
                    const timeShown = 2000 * this.visible.length
                    setTimeout(() => {
                        this.remove(id)
                    }, timeShown)
                },
                remove(id) {
                    const notice = this.visible.find(notice => notice.id == id)
                    const index = this.visible.indexOf(notice)
                    this.visible.splice(index, 1)
                },
            }
        }
    </script>
    <script>
        var themeToggleBtn = document.getElementById('theme-toggle');

        // Change the icons inside the button based on previous settings
        if (localStorage.getItem('color-theme') === 'dark' || (!('color-theme' in localStorage) && window.matchMedia('(prefers-color-scheme: dark)').matches)) {
            themeToggleBtn.classList.add('theme-toggle--toggled');

        } else {
            themeToggleBtn.classList.remove('theme-toggle--toggled');
        }


        themeToggleBtn.addEventListener('click', function () {

            themeToggleBtn.classList.toggle('theme-toggle--toggled');


            // if set via local storage previously
            if (localStorage.getItem('color-theme')) {
                if (localStorage.getItem('color-theme') === 'light') {
                    document.documentElement.classList.add('dark');
                    localStorage.setItem('color-theme', 'dark');
                } else {
                    document.documentElement.classList.remove('dark');
                    localStorage.setItem('color-theme', 'light');
                }

                // if NOT set via local storage previously
            } else {
                if (document.documentElement.classList.contains('dark')) {
                    document.documentElement.classList.remove('dark');
                    localStorage.setItem('color-theme', 'light');
                } else {
                    document.documentElement.classList.add('dark');
                    localStorage.setItem('color-theme', 'dark');
                }
            }

        });
    </script>

</body>

</html>